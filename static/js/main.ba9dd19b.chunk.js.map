{"version":3,"sources":["components/Container/Container.styles.js","components/Container/Container.js","components/FeedbackBtn/FeedbackBtn.styles.js","components/FeedbackBtn/FeedbackBtn.js","components/Notification/Notification.styles.js","components/Notification/Notification.js","components/Section/Section.styles.js","components/Section/Section.js","components/StatisticList/StatisticList.styles.js","components/StatisticItem/StatisticItem.styles.js","components/StatisticItem/StatisticItem.js","components/StatisticList/StatisticList.js","App.styles.js","App.js","index.js"],"names":["ContainerStyled","styled","div","Container","children","ButtonList","ul","ButtonItem","li","ButtonElem","button","FeedbackBtn","options","onLeaveFeedback","map","option","type","onClick","NotificationStyled","p","Notification","text","H2Styled","h2","Section","title","defaultProps","StatisticListStyled","StatisticItemStyled","StatisticLabel","span","StatisticItem","label","value","StatisticList","good","neutral","bad","total","positivePercentage","H1Styled","h1","App","useState","setGood","setNeutral","setBad","totalCountFeedback","evt","target","textContent","toLowerCase","percentage","toFixed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba9dd19b.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const ContainerStyled = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    margin-top: 15px;\r\n    margin-bottom: 15px;\r\n\r\n    width: 500px;\r\n    padding: 10px;\r\n\r\n    border: 2px solid orange;\r\n    border-radius: 20px;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { ContainerStyled } from './Container.styles';\r\n\r\nexport const Container = ({ children }) => {\r\n    return <ContainerStyled>{children}</ContainerStyled>;\r\n};\r\n\r\nContainer.propTypes = {\r\n    children: PropTypes.node,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ButtonList = styled.ul`\r\n    width: 100%;\r\n    margin-top: 0;\r\n    margin-bottom: 10px;\r\n    padding: 15px;\r\n    font-size: 40px;\r\n    font-weight: 700;\r\n    color: black;\r\n`;\r\n\r\nexport const ButtonItem = styled.li`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin-bottom: 10px;\r\n    color: black;\r\n`;\r\n\r\nexport const ButtonElem = styled.button`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 150px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    padding: 15px;\r\n    font-size: 15px;\r\n    font-weight: 700;\r\n    text-transform: capitalize;\r\n    background-color: orange;\r\n    border: 2px solid orangered;\r\n    border-radius: 20px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        background-color: azure;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { ButtonList, ButtonItem, ButtonElem } from './FeedbackBtn.styles';\r\n\r\nexport const FeedbackBtn = ({ options, onLeaveFeedback }) => {\r\n    return (\r\n        <ButtonList>\r\n            {options.map(option => (\r\n                <ButtonItem key={option}>\r\n                    <ButtonElem type=\"button\" onClick={onLeaveFeedback}>\r\n                        {option}\r\n                    </ButtonElem>\r\n                </ButtonItem>\r\n            ))}\r\n        </ButtonList>\r\n    );\r\n};\r\n\r\nFeedbackBtn.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const NotificationStyled = styled.p`\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n    padding: 10px;\r\n    font-size: 20px;\r\n    font-weight: 500;\r\n    color: orange;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { NotificationStyled } from './Notification.styles';\r\n\r\nexport const Notification = ({ text }) => {\r\n    return <NotificationStyled>{text}</NotificationStyled>;\r\n};\r\n\r\nNotification.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const H2Styled = styled.h2`\r\n    text-align: center;\r\n    margin-top: 0px;\r\n    margin-bottom: 10px;\r\n    font-size: 30px;\r\n    font-weight: 700;\r\n    color: black;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { H2Styled } from './Section.styles';\r\n\r\nexport const Section = ({ title, children }) => {\r\n    return (\r\n        <section>\r\n            <H2Styled>{title}</H2Styled>\r\n            <>{children}</>\r\n        </section>\r\n    );\r\n};\r\n\r\nSection.defaultProps = {\r\n    children: '',\r\n};\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const StatisticListStyled = styled.ul`\r\n    margin-top: 0px;\r\n    margin-bottom: 10px;\r\n    padding: 0px;\r\n    font-size: 20px;\r\n    font-weight: 500;\r\n    color: black;\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const StatisticItemStyled = styled.li`\r\n    margin-top: 0px;\r\n    margin-bottom: 10px;\r\n    font-size: 20px;\r\n    font-weight: 500;\r\n    color: black;\r\n`;\r\n\r\nexport const StatisticLabel = styled.span`\r\n    text-transform: capitalize;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { StatisticItemStyled, StatisticLabel } from './StatisticItem.styles';\r\n\r\nexport const StatisticItem = ({ label, value }) => {\r\n    return (\r\n        <StatisticItemStyled>\r\n            <StatisticLabel>{label}</StatisticLabel> : {value}\r\n        </StatisticItemStyled>\r\n    );\r\n};\r\n\r\nStatisticItem.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { StatisticListStyled } from './StatisticList.styles';\r\nimport { StatisticItem } from '../StatisticItem/StatisticItem';\r\n\r\nexport const StatisticList = ({\r\n    good,\r\n    neutral,\r\n    bad,\r\n    total,\r\n    positivePercentage,\r\n}) => {\r\n    return (\r\n        <StatisticListStyled>\r\n            <StatisticItem key=\"good\" label=\"good\" value={good} />\r\n            <StatisticItem key=\"neutral\" label=\"neutral\" value={neutral} />\r\n            <StatisticItem key=\"bad\" label=\"bad\" value={bad} />\r\n\r\n            <StatisticItem key=\"total\" label=\"total\" value={total} />\r\n\r\n            <StatisticItem\r\n                key=\"positivePercentage\"\r\n                label=\"positive feedback\"\r\n                value={positivePercentage}\r\n            />\r\n        </StatisticListStyled>\r\n    );\r\n};\r\n\r\nStatisticList.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.string.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const H1Styled = styled.h1`\r\n    text-align: center;\r\n    margin-top: 0px;\r\n    margin-bottom: 20px;\r\n    font-size: 40px;\r\n    font-weight: 700;\r\n    color: black;\r\n`;\r\n","import React, { useState } from 'react';\r\n\r\nimport { Container } from './components/Container/Container';\r\nimport { FeedbackBtn } from './components/FeedbackBtn/FeedbackBtn';\r\nimport { Notification } from './components/Notification/Notification';\r\nimport { Section } from './components/Section/Section';\r\nimport { StatisticList } from './components/StatisticList/StatisticList';\r\n\r\nimport { H1Styled } from './App.styles';\r\n\r\nconst App = () => {\r\n    const [good, setGood] = useState(0);\r\n    const [neutral, setNeutral] = useState(0);\r\n    const [bad, setBad] = useState(0);\r\n\r\n    const increment = evt => {\r\n        const value = evt.target.textContent.toLowerCase();\r\n\r\n        switch (value) {\r\n            case 'good':\r\n                setGood(good + 1);\r\n                break;\r\n\r\n            case 'neutral':\r\n                setNeutral(neutral + 1);\r\n                break;\r\n\r\n            case 'bad':\r\n                setBad(bad + 1);\r\n                break;\r\n\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const totalCountFeedback = (good, neutral, bad) => {\r\n        return good + neutral + bad;\r\n    };\r\n\r\n    const positivePercentage = (good, neutral, bad) => {\r\n        let total = good + neutral + bad;\r\n        let percentage = ((good / total) * 100).toFixed(0);\r\n        return `${percentage}%`;\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <H1Styled>Feedback Service</H1Styled>\r\n            <Section title={'Please leave your feedback'}>\r\n                <FeedbackBtn\r\n                    options={['good', 'neutral', 'bad']}\r\n                    onLeaveFeedback={increment}\r\n                />\r\n            </Section>\r\n\r\n            <Section title={'Statistics'}>\r\n                {totalCountFeedback(good, neutral, bad) < 1 ? (\r\n                    <Notification text={'No feedback given'} />\r\n                ) : (\r\n                    <StatisticList\r\n                        good={good}\r\n                        neutral={neutral}\r\n                        bad={bad}\r\n                        total={totalCountFeedback(good, neutral, bad)}\r\n                        positivePercentage={positivePercentage(\r\n                            good,\r\n                            neutral,\r\n                            bad,\r\n                        )}\r\n                    />\r\n                )}\r\n            </Section>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}